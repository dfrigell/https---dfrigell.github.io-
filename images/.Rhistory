ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(2, 2, 2, 2))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(2, 2, 2, 2))
library(colorfindr)
library(gganimate)
airq <- airquality
airq$Month <- format(ISOdate(2004,1:12,1),"%B")[airq$Month]
options(gganimate.dev_args = list(width = 12, height = 7, units = 'in', res=320))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(2, 2, 2, 2))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(10, 2, 2, 2))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(2, 2, 2, 2, "cm"))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(6, 2, 2, 2, "cm"))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
#  transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(2, 2, 2, 4, "cm"))
ggplot(airq, aes(Day, Temp, group = Month, col=Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 1.5) +
geom_text(aes(x = 31.1, label = "x"), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
theme_void()+
theme(legend.position =  "none")+
scale_color_manual(values=c("red3", "grey80", "grey80", "steelblue", "grey80"))+
theme(plot.margin = margin(2, 2, 2, 4, "cm"))
anim_save("C:/Users/danie/OneDrive/Strukturkapital/10. Utveckling/Hemsidan/line.gif")
source("C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Packages/FunctionsShares3.0.R")
source("C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Packages/Fomats.R")
source("C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Packages/DirectoryFunctions.R")
library(unikn)
library(alphavantager)
library(tidyquant)
# --- Set Folders
SourceDataFolder=paste0(.CurrentDir(),"/1.SourceData")
OutputDataFolder=paste0(.CurrentDir(),"/2.OutputData")
load(paste0(OutputDataFolder,"/Data.RData"))
VolatilityData=data[[1]]
VolatilityData
# --- Difference volatility ----------------------------------
Chart2=VolatilityData%>%
dplyr::filter(name=="DiffVolDay"|name=="DiffVolWeek") %>%
dplyr::filter(Date>StartDate) %>%
ggplot(aes(x=Date, y=value*100, col=name))+
geom_line()+
theme.aderio()+
scale_color_manual(values=aderio.color)+
geom_smooth(size=0.5)+
theme(
legend.position = "bottom",
legend.background = element_blank())+
labs(x="",
y="Percent",
title="Difference share price volatility and index volatility",
subtitle = "20 days rolling volatility based on daily and weekly stock returns",
caption = "Smoothed trend line estimated as polynomial regression based on local observations weighetd based in distance from each observation")+
facet_wrap(vars(Ticker))
StartDate=as.Date("2017-01-01")
TickerSelect="AYI"
Chart1=VolatilityData%>%
dplyr::filter(Date>StartDate) %>%
dplyr::filter(name=="DayVol"|name=="WeekVol")%>%
ggplot(aes(x=Date, y=value*100, col=name))+
geom_line()+ theme.aderio()+
geom_smooth(size=0.5)+
scale_color_manual(values=aderio.color)+
facet_wrap(vars(Ticker))+
ylim(0,NA)+
theme(
legend.position = "bottom",
legend.background = element_blank())+
labs(x="",
y="Percent",
title="Historical share price volatility",
subtitle = "20 days rolling volatility based on daily and weekly stock returns",
caption = "Smoothed trend line estimated as polynomial regression based on local observations weighetd based in distance from each observation")
VolatilityData
VolatilityData=data[[2]]
unlist(data)
data
VolatilityData=data[[3]]
Chart1=VolatilityData%>%
dplyr::filter(Date>StartDate) %>%
dplyr::filter(name=="DayVol"|name=="WeekVol")%>%
ggplot(aes(x=Date, y=value*100, col=name))+
geom_line()+ theme.aderio()+
geom_smooth(size=0.5)+
scale_color_manual(values=aderio.color)+
facet_wrap(vars(Ticker))+
ylim(0,NA)+
theme(
legend.position = "bottom",
legend.background = element_blank())+
labs(x="",
y="Percent",
title="Historical share price volatility",
subtitle = "20 days rolling volatility based on daily and weekly stock returns",
caption = "Smoothed trend line estimated as polynomial regression based on local observations weighetd based in distance from each observation")
Chart1
# --- Difference volatility ----------------------------------
Chart2=VolatilityData%>%
dplyr::filter(name=="DiffVolDay"|name=="DiffVolWeek") %>%
dplyr::filter(Date>StartDate) %>%
ggplot(aes(x=Date, y=value*100, col=name))+
geom_line()+
theme.aderio()+
scale_color_manual(values=aderio.color)+
geom_smooth(size=0.5)+
theme(
legend.position = "bottom",
legend.background = element_blank())+
labs(x="",
y="Percent",
title="Difference share price volatility and index volatility",
subtitle = "20 days rolling volatility based on daily and weekly stock returns",
caption = "Smoothed trend line estimated as polynomial regression based on local observations weighetd based in distance from each observation")+
facet_wrap(vars(Ticker))
#---Density chart share and index volatility
Chart8=VolatilityData %>% pivot_wider(names_from = name) %>%
filter(Ticker==TickerSelect) %>%
ggplot(aes(y=WeekVol*100, x=WeekVolIndex*100))+
geom_point(alpha=0.4, col="#76323F", size=0.1) + geom_density_2d(col="#76323F")+
theme.aderio()+ scale_colour_manual(values=aderio.color)+
labs(x="", y="Percent", title="Share and index volatility", subtitle = "Plot including density of observations",
caption = "Source: Borsdata, Aderio analysis")
Chart8
# ---Histogram volatility
Chart9=VolatilityData%>%dplyr::filter(
name=="WeekVol"&
Ticker==TickerSelect) %>%
dplyr::filter(Date>StartDate) %>%
ggplot(aes(y=value*100))+
geom_histogram(col="white")+
theme.aderio()+
scale_colour_manual(values=aderio.color)+
labs(x="",
y="Volatility weekly return",
title="Distribution of volatility",
subtitle = "Volatility based on weekly stock returns")
Chart9
Chart10=VolatilityData%>%
dplyr::filter(Date>StartDate) %>%
dplyr::filter(name=="DayVol"|name=="WeekVol")%>%
dplyr::filter(Ticker==TickerSelect)%>%
ggplot(aes(x=Date, y=value*100, col=name))+
geom_line()+ theme.aderio()+
geom_smooth(size=0.5)+
scale_color_manual(values=aderio.color)+
facet_wrap(vars(Ticker))+
ylim(0,NA)+
labs(x="",
y="Percent",
title="Historical share price volatility",
subtitle = "20 days rolling volatility based on daily and weekly stock returns",
caption = "Smoothed trend line estimated as polynomial regression based on local observations weighetd based in distance from each observation")
Chart10
# --- Difference volatility ----------------------------------
Chart12=VolatilityData%>%
dplyr::filter(name=="DiffVolDay"|name=="DiffVolWeek") %>%
dplyr::filter(Date>StartDate) %>%
dplyr::filter(Ticker==TickerSelect)%>%
ggplot(aes(x=Date, y=value*100, col=name))+
geom_line()+
theme.aderio()+
scale_color_manual(values=aderio.color)+
geom_smooth(size=0.5)+
labs(x="",
y="Percent",
title="Difference share price volatility and index volatility",
subtitle = "20 days rolling volatility based on daily and weekly stock returns",
caption = "Smoothed trend line estimated as polynomial regression based on local observations weighetd based in distance from each observation")
Chart12
class(Chart8)
cowplot::plot_grid(Chart8, Chart9, Chart10, Chart11)
# Slides all companies
AddSlideFour(
Chart1=Chart3,
Chart2=Chart7,
Chart3=Chart3,
Chart4=Chart7)
cowplot::plot_grid(Chart8, Chart9, Chart10, Chart12)
TemplateLocation="C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Templates/Share Price Analysis/VolatilityOutput.pptx"
doc=officer::read_pptx(path=TemplateLocation)
# --------------------------------------------------------------------------------------------------------
#  EXPORT PLOTS TO POWERPOINT
# --------------------------------------------------------------------------------------------------------
library(officer)
AddSlideFour
CowChart=cowplot::plot_grid(Chart8, Chart9, Chart10, Chart12)
class(CowChart)
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1, width = 3.5, height = 2))
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1))
print(doc, paste0(OutputDataFolder,"/Volatility.Charts.pptx"))
TemplateLocation="C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Templates/Share Price Analysis/VolatilityOutput.pptx"
doc=officer::read_pptx(path=TemplateLocation)
CowChart=cowplot::plot_grid(Chart8, Chart9, Chart10, Chart12)
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1))
print(doc, paste0(OutputDataFolder,"/Volatility.Charts.pptx"))
TemplateLocation="C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Templates/Share Price Analysis/VolatilityOutput.pptx"
doc=officer::read_pptx(path=TemplateLocation)
CowChart=cowplot::plot_grid(Chart8, Chart9, Chart10, Chart12)
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1, width = 14, height = 10))
print(doc, paste0(OutputDataFolder,"/Volatility.Charts.pptx"))
print(doc, paste0(OutputDataFolder,"/Volatility.Charts.pptx"))
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1, width = 10, height = ))
TemplateLocation="C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Templates/Share Price Analysis/VolatilityOutput.pptx"
doc=officer::read_pptx(path=TemplateLocation)
CowChart=cowplot::plot_grid(Chart8, Chart9, Chart10, Chart12)
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1, width = 10, height = ))
print(doc, paste0(OutputDataFolder,"/Volatility.Charts.pptx"))
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1, width = 10, height = 5))
TemplateLocation="C:/Users/danie/OneDrive/Strukturkapital/9. R/3. Produktion/Templates/Share Price Analysis/VolatilityOutput.pptx"
doc=officer::read_pptx(path=TemplateLocation)
CowChart=cowplot::plot_grid(Chart8, Chart9, Chart10, Chart12)
doc=ph_with(doc, value = CowChart,
location = ph_location(left = 0.5,  top = 1, width = 10, height = 5))
print(doc, paste0(OutputDataFolder,"/Volatility.Charts.pptx"))
CowChart
